% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_graph.R
\name{estimate_graph}
\alias{estimate_graph}
\title{Graph estimate}
\usage{
estimate_graph(
  data,
  v.conf = NULL,
  method = "IsingFit",
  direction = NULL,
  IC = "EBIC",
  rule = "AND",
  OR = TRUE,
  conf.int = NULL,
  edge.table = FALSE
)
}
\arguments{
\item{data}{a matrix or a dataframe containing all the variables. All columns must be named.}

\item{method}{estimation method to use: "stepwise", "bestsubset", "IsingFit"}

\item{direction}{the direction of stepwise search, can be one of "backward" or "forward". Only if method='stepwise'.}

\item{IC}{information criteria to use: "AIC", "BIC", "EBIC". EBIC is the default for IsingFit.}

\item{rule}{rule to apply to the final edges selection, can be one of "AND" or "OR.
"AND" considers the intersection of the edges, "OR" considers the union of edges.}

\item{OR}{logical. If TRUE the function returns an adjacency matrix with odds-ratios, if FALSE with log(OR).}

\item{conf.int}{confidence level required. Default is NULL and only the matrix with the p-values is returned.}

\item{edge.table}{logical. If TRUE the function returns the graph also in dataframe mode.}

\item{v.corr}{A string with the names of the variables to be considered in the analysis but not in the network.
By design, the associations between them will be zero.}
}
\value{
The function returns the estimated weighted adjacency matrix of the graph and a matrix with the associated p-values.
        If conf.int is not null, a matrix with all the associations and the corresponding confidence intervals will be returned.
}
\description{
Graph estimate
}
\examples{
set.seed(1)
S = solve(matrix(c(1,0.2,0,0.2,1,0.9,0,0.9,1), ncol=3))
df = as.data.frame(ifelse(mvtnorm::rmvnorm(1000, sigma=S)>0,1,0))
colnames(df) <- paste0('X',1:3)
estimate_graph(df, method='stepwise',direction='backward')

}
